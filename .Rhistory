tempTest = dataScaled[FALSE,]
vals = c()
for (j in c(1:999)){
vals = c(vals, dataScaled[i, j])
}
tempTest[1,] = vals
tempTrain = dataScaled[-c(i),]
model = glm(Score ~ ., family = poisson, data = tempTrain)
predictions = c(predictions, predict(model, newdata = tempTest, type = "response"))
#model = glmnet(Score ~ ., family = "poisson", data = tempTrain, alpha = 0)
#predictions = c(predictions, predict(model, newdata = tempTest, type = "response", s = 0.25))
}
data["Poisson Mean Prediction"] = predictions
prob_0_goal = c()
prob_1_goal = c()
prob_2_goal = c()
prob_3_goal = c()
prob_4_goal = c()
prob_5_goal = c()
prob_6_goal = c()
prob_7_goal = c()
prob_8_goal = c()
prob_9_goal = c()
prob_10_goal = c()
for (i in predictions){
prob_0_goal = c(prob_0_goal, dpois(0, i))
prob_1_goal = c(prob_1_goal, dpois(1, i))
prob_2_goal = c(prob_2_goal, dpois(2, i))
prob_3_goal = c(prob_3_goal, dpois(3, i))
prob_4_goal = c(prob_4_goal, dpois(4, i))
prob_5_goal = c(prob_5_goal, dpois(5, i))
prob_6_goal = c(prob_6_goal, dpois(6, i))
prob_7_goal = c(prob_7_goal, dpois(7, i))
prob_8_goal = c(prob_8_goal, dpois(8, i))
prob_9_goal = c(prob_9_goal, dpois(9, i))
prob_10_goal = c(prob_10_goal, dpois(10, i))
}
data["0 Goal Prob"] = prob_0_goal
data["1 Goal Prob"] = prob_1_goal
data["2 Goal Prob"] = prob_2_goal
data["3 Goal Prob"] = prob_3_goal
data["4 Goal Prob"] = prob_4_goal
data["5 Goal Prob"] = prob_5_goal
data["6 Goal Prob"] = prob_6_goal
data["7 Goal Prob"] = prob_7_goal
data["8 Goal Prob"] = prob_8_goal
data["9 Goal Prob"] = prob_9_goal
data["10 Goal Prob"] = prob_10_goal
write.csv(data, "C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/poissonPredictionMeans3Games.csv")
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
data = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/poissonFormattedData3Games.csv")
numData = data[-c(1,2,3,4)]
dataScaled = as.data.frame(scale(numData))
#tData = dataScaled[c(1:58)]
#eData = dataScaled[-c(1:58)]
#tData = sigmoid(tData)
#dataScaled = cbind(tData, eData)
dataScaled["Home Field"] = data["Home.Field"]
dataScaled["Score"] = data["Score"]
#model = glm(Score ~ ., family = poisson, data = dataScaled)
#opt = stepAIC(model)
#df = as.data.frame(model.matrix(opt))
#dataScaled = df[-c(1)]
#dataScaled["Score"] = data["Score"]
predictions = c()
for (i in 1:nrow(dataScaled)){
print (i)
tempTest = dataScaled[FALSE,]
vals = c()
for (j in c(1:999)){
vals = c(vals, dataScaled[i, j])
}
tempTest[1,] = vals
tempTrain = dataScaled[-c(i),]
model = glm(Score ~ ., family = poisson, data = tempTrain)
predictions = c(predictions, predict(model, newdata = tempTest, type = "response"))
#model = glmnet(Score ~ ., family = "poisson", data = tempTrain, alpha = 0)
#predictions = c(predictions, predict(model, newdata = tempTest, type = "response", s = 0.25))
}
data["Poisson Mean Prediction"] = predictions
prob_0_goal = c()
prob_1_goal = c()
prob_2_goal = c()
prob_3_goal = c()
prob_4_goal = c()
prob_5_goal = c()
prob_6_goal = c()
prob_7_goal = c()
prob_8_goal = c()
prob_9_goal = c()
prob_10_goal = c()
for (i in predictions){
prob_0_goal = c(prob_0_goal, dpois(0, i))
prob_1_goal = c(prob_1_goal, dpois(1, i))
prob_2_goal = c(prob_2_goal, dpois(2, i))
prob_3_goal = c(prob_3_goal, dpois(3, i))
prob_4_goal = c(prob_4_goal, dpois(4, i))
prob_5_goal = c(prob_5_goal, dpois(5, i))
prob_6_goal = c(prob_6_goal, dpois(6, i))
prob_7_goal = c(prob_7_goal, dpois(7, i))
prob_8_goal = c(prob_8_goal, dpois(8, i))
prob_9_goal = c(prob_9_goal, dpois(9, i))
prob_10_goal = c(prob_10_goal, dpois(10, i))
}
data["0 Goal Prob"] = prob_0_goal
data["1 Goal Prob"] = prob_1_goal
data["2 Goal Prob"] = prob_2_goal
data["3 Goal Prob"] = prob_3_goal
data["4 Goal Prob"] = prob_4_goal
data["5 Goal Prob"] = prob_5_goal
data["6 Goal Prob"] = prob_6_goal
data["7 Goal Prob"] = prob_7_goal
data["8 Goal Prob"] = prob_8_goal
data["9 Goal Prob"] = prob_9_goal
data["10 Goal Prob"] = prob_10_goal
write.csv(data, "C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/poissonPredictionMeans3Games.csv")
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
data = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/poissonFormattedData4Games.csv")
numData = data[-c(1,2,3,4)]
dataScaled = as.data.frame(scale(numData))
#tData = dataScaled[c(1:58)]
#eData = dataScaled[-c(1:58)]
#tData = sigmoid(tData)
#dataScaled = cbind(tData, eData)
dataScaled["Home Field"] = data["Home.Field"]
dataScaled["Score"] = data["Score"]
#model = glm(Score ~ ., family = poisson, data = dataScaled)
#opt = stepAIC(model)
#df = as.data.frame(model.matrix(opt))
#dataScaled = df[-c(1)]
#dataScaled["Score"] = data["Score"]
predictions = c()
for (i in 1:nrow(dataScaled)){
print (i)
tempTest = dataScaled[FALSE,]
vals = c()
for (j in c(1:999)){
vals = c(vals, dataScaled[i, j])
}
tempTest[1,] = vals
tempTrain = dataScaled[-c(i),]
model = glm(Score ~ ., family = poisson, data = tempTrain)
predictions = c(predictions, predict(model, newdata = tempTest, type = "response"))
#model = glmnet(Score ~ ., family = "poisson", data = tempTrain, alpha = 0)
#predictions = c(predictions, predict(model, newdata = tempTest, type = "response", s = 0.25))
}
data["Poisson Mean Prediction"] = predictions
prob_0_goal = c()
prob_1_goal = c()
prob_2_goal = c()
prob_3_goal = c()
prob_4_goal = c()
prob_5_goal = c()
prob_6_goal = c()
prob_7_goal = c()
prob_8_goal = c()
prob_9_goal = c()
prob_10_goal = c()
for (i in predictions){
prob_0_goal = c(prob_0_goal, dpois(0, i))
prob_1_goal = c(prob_1_goal, dpois(1, i))
prob_2_goal = c(prob_2_goal, dpois(2, i))
prob_3_goal = c(prob_3_goal, dpois(3, i))
prob_4_goal = c(prob_4_goal, dpois(4, i))
prob_5_goal = c(prob_5_goal, dpois(5, i))
prob_6_goal = c(prob_6_goal, dpois(6, i))
prob_7_goal = c(prob_7_goal, dpois(7, i))
prob_8_goal = c(prob_8_goal, dpois(8, i))
prob_9_goal = c(prob_9_goal, dpois(9, i))
prob_10_goal = c(prob_10_goal, dpois(10, i))
}
data["0 Goal Prob"] = prob_0_goal
data["1 Goal Prob"] = prob_1_goal
data["2 Goal Prob"] = prob_2_goal
data["3 Goal Prob"] = prob_3_goal
data["4 Goal Prob"] = prob_4_goal
data["5 Goal Prob"] = prob_5_goal
data["6 Goal Prob"] = prob_6_goal
data["7 Goal Prob"] = prob_7_goal
data["8 Goal Prob"] = prob_8_goal
data["9 Goal Prob"] = prob_9_goal
data["10 Goal Prob"] = prob_10_goal
write.csv(data, "C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/poissonPredictionMeans4Games.csv")
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-20_Season/intermediate.csv")
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-20_Season/intermediate.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
pred
train
pred$X
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
pred
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
numDataTrain = train[-c(1,2,3,4)]
trainScaled = as.data.frame(scale(numDataTrain))
trainScaled["Home Field"] = train["Home.Field"]
trainScaled["Score"] = train["Score"]
numDataPred = pred[-c(1,2,3)]
colMeans = c()
colSds = c()
for (i in colnames(numDataTrain)){
colMeans = c(colMeans, mean(numDataTrain[[i]]))
colSds = c(colSds, sd(numDataTrain[[i]]))
}
predScaled =as.data.frame(scale(numDataPred, center=colMeans, scale=colSds))
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
numDataTrain = train[-c(1,2,3,4)]
trainScaled = as.data.frame(scale(numDataTrain))
trainScaled["Home Field"] = train["Home.Field"]
trainScaled["Score"] = train["Score"]
numDataPred = pred[-c(1,2,3)]
colMeans = c()
colSds = c()
for (i in colnames(numDataTrain)){
colMeans = c(colMeans, mean(numDataTrain[[i]]))
colSds = c(colSds, sd(numDataTrain[[i]]))
}
predScaled = as.data.frame(scale(numDataPred, center=colMeans, scale=colSds))
predScaled
View(predScaled)
View(trainScaled)
View(pred)
View(train)
model = glm(Score ~ ., family = poisson, data = trainScaled)
predictions = predict(model, newdata = predScaled, type = "response")
predScaled["Home Field"] = pred["Home.Field"]
model = glm(Score ~ ., family = poisson, data = trainScaled)
predictions = predict(model, newdata = predScaled, type = "response")
summary(model)
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
numDataTrain = train[-c(1,2,3,4)]
trainScaled = as.data.frame(scale(numDataTrain))
trainScaled["Home Field"] = train["Home.Field"]
trainScaled["Score"] = train["Score"]
numDataPred = pred[-c(1,2,3)]
colMeans = c()
colSds = c()
for (i in colnames(numDataTrain)){
colMeans = c(colMeans, mean(numDataTrain[[i]]))
colSds = c(colSds, sd(numDataTrain[[i]]))
}
predScaled = as.data.frame(scale(numDataPred, center=colMeans, scale=colSds))
predScaled["Home Field"] = pred["Home.Field"]
model = glm(Score ~ ., family = poisson, data = trainScaled)
predictions = predict(model, newdata = predScaled, type = "response")
pred["Poisson Mean Prediction"] = predictions
prob_0_goal = c()
prob_1_goal = c()
prob_2_goal = c()
prob_3_goal = c()
prob_4_goal = c()
prob_5_goal = c()
prob_6_goal = c()
prob_7_goal = c()
prob_8_goal = c()
prob_9_goal = c()
prob_10_goal = c()
for (i in predictions){
prob_0_goal = c(prob_0_goal, dpois(0, i))
prob_1_goal = c(prob_1_goal, dpois(1, i))
prob_2_goal = c(prob_2_goal, dpois(2, i))
prob_3_goal = c(prob_3_goal, dpois(3, i))
prob_4_goal = c(prob_4_goal, dpois(4, i))
prob_5_goal = c(prob_5_goal, dpois(5, i))
prob_6_goal = c(prob_6_goal, dpois(6, i))
prob_7_goal = c(prob_7_goal, dpois(7, i))
prob_8_goal = c(prob_8_goal, dpois(8, i))
prob_9_goal = c(prob_9_goal, dpois(9, i))
prob_10_goal = c(prob_10_goal, dpois(10, i))
}
data["0 Goal Prob"] = prob_0_goal
data["1 Goal Prob"] = prob_1_goal
data["2 Goal Prob"] = prob_2_goal
data["3 Goal Prob"] = prob_3_goal
data["4 Goal Prob"] = prob_4_goal
data["5 Goal Prob"] = prob_5_goal
data["6 Goal Prob"] = prob_6_goal
data["7 Goal Prob"] = prob_7_goal
data["8 Goal Prob"] = prob_8_goal
data["9 Goal Prob"] = prob_9_goal
data["10 Goal Prob"] = prob_10_goal
write.csv(data, "C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
numDataTrain = train[-c(1,2,3,4)]
trainScaled = as.data.frame(scale(numDataTrain))
trainScaled["Home Field"] = train["Home.Field"]
trainScaled["Score"] = train["Score"]
numDataPred = pred[-c(1,2,3)]
colMeans = c()
colSds = c()
for (i in colnames(numDataTrain)){
colMeans = c(colMeans, mean(numDataTrain[[i]]))
colSds = c(colSds, sd(numDataTrain[[i]]))
}
predScaled = as.data.frame(scale(numDataPred, center=colMeans, scale=colSds))
predScaled["Home Field"] = pred["Home.Field"]
model = glm(Score ~ ., family = poisson, data = trainScaled)
predictions = predict(model, newdata = predScaled, type = "response")
pred["Poisson Mean Prediction"] = predictions
prob_0_goal = c()
prob_1_goal = c()
prob_2_goal = c()
prob_3_goal = c()
prob_4_goal = c()
prob_5_goal = c()
prob_6_goal = c()
prob_7_goal = c()
prob_8_goal = c()
prob_9_goal = c()
prob_10_goal = c()
for (i in predictions){
prob_0_goal = c(prob_0_goal, dpois(0, i))
prob_1_goal = c(prob_1_goal, dpois(1, i))
prob_2_goal = c(prob_2_goal, dpois(2, i))
prob_3_goal = c(prob_3_goal, dpois(3, i))
prob_4_goal = c(prob_4_goal, dpois(4, i))
prob_5_goal = c(prob_5_goal, dpois(5, i))
prob_6_goal = c(prob_6_goal, dpois(6, i))
prob_7_goal = c(prob_7_goal, dpois(7, i))
prob_8_goal = c(prob_8_goal, dpois(8, i))
prob_9_goal = c(prob_9_goal, dpois(9, i))
prob_10_goal = c(prob_10_goal, dpois(10, i))
}
pred["0 Goal Prob"] = prob_0_goal
pred["1 Goal Prob"] = prob_1_goal
pred["2 Goal Prob"] = prob_2_goal
pred["3 Goal Prob"] = prob_3_goal
pred["4 Goal Prob"] = prob_4_goal
pred["5 Goal Prob"] = prob_5_goal
pred["6 Goal Prob"] = prob_6_goal
pred["7 Goal Prob"] = prob_7_goal
pred["8 Goal Prob"] = prob_8_goal
pred["9 Goal Prob"] = prob_9_goal
pred["10 Goal Prob"] = prob_10_goal
write.csv(pred, "C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
numDataTrain = train[-c(1,2,3,4)]
trainScaled = as.data.frame(scale(numDataTrain))
trainScaled["Home Field"] = train["Home.Field"]
trainScaled["Score"] = train["Score"]
numDataPred = pred[-c(1,2,3)]
colMeans = c()
colSds = c()
for (i in colnames(numDataTrain)){
colMeans = c(colMeans, mean(numDataTrain[[i]]))
colSds = c(colSds, sd(numDataTrain[[i]]))
}
predScaled = as.data.frame(scale(numDataPred, center=colMeans, scale=colSds))
predScaled["Home Field"] = pred["Home.Field"]
model = glm(Score ~ ., family = poisson, data = trainScaled)
predictions = predict(model, newdata = predScaled, type = "response")
predictions
summary(model)
View(predScaled)
View(pred)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
numDataTrain = train[-c(1,2,3,4)]
trainScaled = as.data.frame(scale(numDataTrain))
trainScaled["Home Field"] = train["Home.Field"]
trainScaled["Score"] = train["Score"]
numDataPred = pred[-c(1,2,3)]
colMeans = c()
colSds = c()
for (i in colnames(numDataTrain)){
colMeans = c(colMeans, mean(numDataTrain[[i]]))
colSds = c(colSds, sd(numDataTrain[[i]]))
}
predScaled = as.data.frame(scale(numDataPred, center=colMeans, scale=colSds))
predScaled["Home Field"] = pred["Home.Field"]
model = glm(Score ~ ., family = poisson, data = trainScaled)
predictions = predict(model, newdata = predScaled, type = "response")
colnames(train)
numDataTrain = train[-c(1,2)]
colnames(numDataTrain)
colnames(pred)
View(train)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/3Game_newvars_no_T/poissonFormattedData3Games.csv")
pred = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/EPL_Csvs/2020-21_Season/intermediate.csv")
trainScaled = train[-c(1,2)]
#trainScaled = as.data.frame(scale(numDataTrain))
#trainScaled["Home Field"] = train["Home.Field"]
#trainScaled["Score"] = train["Score"]
predScaled = pred[-c(1,2)]
model = glm(Score ~ ., family = poisson, data = trainScaled)
predictions = predict(model, newdata = predScaled, type = "response")
predictions
5/2
int(5/2)
trunc(5/2)
install.packages("caret")
seq(1,100,breaks=10,labels=FALSE)
foldBreaks = c(1,10,20,30,40,50)
for (i in 1:6){
seq(foldBreaks[i], foldBreaks[i+1])
}
for (i in 1:5){
seq(foldBreaks[i], foldBreaks[i+1])
}
for (i in 1:5){
print (seq(foldBreaks[i], foldBreaks[i+1]))
}
foldBreaks = c(0,10,20,30,40,50)
for (i in 1:5){
print (seq(foldBreaks[i] + 1, foldBreaks[i+1]))
}
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
library(dplyr)
library(caret)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/temptrain.csv")
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
library(dplyr)
library(caret)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/temptrainx.csv")
View(train)
library(ggplot2)
library(sandwich)
library(msm)
library(glmnetUtils)
library(sigmoid)
library(My.stepwise)
library(MASS)
library(dplyr)
library(caret)
train = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/temptrainx.csv")
test = read.csv("C:/Users/JackMitt/Documents/EPLBettingModel/temptestx.csv")
trainNum = train[-c(1,2,3,4)]
testNum = test[-c(1,2,3,4)]
trainS = as.data.frame(scale(trainNum))
colMeans = c()
colSds = c()
for (i in colnames(trainNum)){
colMeans = c(colMeans, mean(trainNum[[i]]))
colSds = c(colSds, sd(trainNum[[i]]))
}
testS =as.data.frame(scale(testNum, center=colMeans, scale=colSds))
trainS["Home Field"] = train["Home.Field"]
trainS["Score"] = train["Score"]
testS["Home Field"] = test["Home.Field"]
testS["Score"] = test["Score"]
predictions = c()
model = glm(Score ~ ., family = "poisson", data = trainS)
summary(model)
